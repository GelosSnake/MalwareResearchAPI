import json
import boto3
from boto3.dynamodb.conditions import Attr

clamav_scan_results_table_name = 'clamav_results'

try:
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table(clamav_scan_results_table_name)
except Exception as E:
    print(E)

def return_code(status, body):
    return {"statusCode": status,"body": json.dumps(body)}
    
    
def extract_time(item):
    try:
        # Also convert to int since update_time will be string.  When comparing
        # strings, "10" is smaller than "2".
        return int(item['time'])
    except KeyError:
        return 0

def get_latest_clamav_scan_results(sha256):
    try:
        sha256 = sha256.lower()
        response = table.scan(FilterExpression=Attr("sha256").eq(sha256))
        if response['Count'] > 0 and "Items" in response.keys():
            response['Items'].sort(key=extract_time, reverse=True)
            return {"code":"SUCCESS","content": response['Items'][0]}
        else:
            return {"code" : "NOT_FOUND","content" :"report not found"}

    except Exception as E:
        print(E)
        return {'code':'UNKNOWN','content':'Unknown error.'}



def lambda_handler(event, context):
    try:
        if event['pathParameters'] and event['pathParameters']['proxy']:
            sha256 = event['pathParameters']['proxy']
            sha256 = sha256.lower()
            result = get_latest_clamav_scan_results(sha256)
            if result['code'] == 'SUCCESS':
                return return_code(200,result['content']['scan_results'])
            if result['code'] == 'NOT_FOUND':
                return return_code(404,"clamav scan results not foud, please trigger a scan first.")
            else:
                return return_code(501, 'Internal server error')
        else:
            return return_code(400, 'sha256 param must be present.')
    except Exception as E:
        print(E)
        return return_code(501, 'Internal server error')