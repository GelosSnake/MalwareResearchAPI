from subprocess import check_output, Popen, PIPE, STDOUT
import pwd
import os
from datetime import datetime
import boto3


AV_DEFINITION_FILENAMES = ["main.cvd","daily.cvd", "daily.cud"]
AV_DEFINITION_S3_BUCKET = 'malscanbotclamavdefinitions'
AV_DEFINITION_PATH = '/tmp/clamav_defs'

def create_dir(path):
    if not os.path.exists(path):
        print("Attempting to create directiory %s.\n" % path)
        os.makedirs(path)
        


def update_defs_from_freshclam():
    create_dir(AV_DEFINITION_PATH)
    fc_env = os.environ.copy()
    fc_proc = Popen(['./freshclam',"-v","--config-file=./freshclam.conf","-u %s" % pwd.getpwuid(os.getuid())[0],"--datadir=/tmp/clamav_defs"],stderr=STDOUT,stdout=PIPE,env=fc_env)
    output = fc_proc.communicate()[0]
    print("freshclam output:\n%s" % output)
    if fc_proc.returncode != 0:
        print("Unexpected exit code from freshclam: %s." % fc_proc.returncode)
    print(fc_proc.returncode)



def upload_defs_to_s3():
    s3 = boto3.resource('s3')
    s3_client = boto3.client('s3')
    for filename in AV_DEFINITION_FILENAMES:
        local_file_path = os.path.join(AV_DEFINITION_PATH, filename)
        if os.path.exists(local_file_path):
            print("Uploading %s to s3://%s" % (local_file_path, os.path.join(AV_DEFINITION_S3_BUCKET,filename)))
            s3_object = s3.Object(AV_DEFINITION_S3_BUCKET,filename)
            s3_object.upload_file(os.path.join(AV_DEFINITION_PATH, filename))

def lambda_handler(event, context):
    try:
        start_time = datetime.utcnow()
        print("Script starting at %s\n" %(start_time.strftime("%Y/%m/%d %H:%M:%S UTC")))
        update_defs_from_freshclam()
        if os.path.exists(os.path.join(AV_DEFINITION_PATH, "main.cud")):
            os.remove(os.path.join(AV_DEFINITION_PATH, "main.cud"))
            if os.path.exists(os.path.join(AV_DEFINITION_PATH, "main.cvd")):
                os.remove(os.path.join(AV_DEFINITION_PATH, "main.cvd"))
        upload_defs_to_s3()

        return True
    except Exception as E:
        return False



