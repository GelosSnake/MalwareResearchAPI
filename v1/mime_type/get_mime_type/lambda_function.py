import json
from botocore.vendored import requests
import boto3
import base64
from botocore.exceptions import ClientError

malscanbot_s3_bucket_name = "malscanbotfiles"
malscanbotfiles_table_name = 'malscanbotfiles'

try:
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table(malscanbotfiles_table_name)
except Exception as E:
    print(E)  

def return_code(status, body):
    return {"statusCode": status,"body":json.dumps(body)}
    
def get_mime_type_from_dynamodb(sha256):
    try:
        sha256 = sha256.lower()
        result = table.get_item(Key={"sha256":sha256})
        if "Item" in result.keys():
            return {"code":"SUCCESS","content": result['Item']['mime_type']}
        else:
            return {"code" : "NOT_FOUND","content" :"report not found"}
    except Exception as E:
        print(E)
        return {'code':'UNKNOWN','content':'Unknown error.'}


def lambda_handler(event, context):
    try:
        if event['pathParameters'] and event['pathParameters']['proxy']:
            sha256 = event['pathParameters']['proxy']
            sha256 = sha256.lower()
            result = get_mime_type_from_dynamodb(sha256)
            if result['code'] == 'SUCCESS':
                return return_code(200,result['content'])
            if result['code'] == 'NOT_FOUND':
                return return_code(404,"mime_type value not found")
            else:
                return return_code(501, 'Internal server error')
        else:
            return return_code(400, 'sha256 param must be present.')
    except Exception as E:
        print(E)
        return return_code(501, 'Internal server error')